<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--数据源-链接数据库的基本信息,这里直接写,不放到*.properties资源文件中-->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://180.100.216.22:3306/gyjyjtkxt" />
        <property name="username" value="root" />
        <property name="password" value="YZyz$123" />
    </bean>

    <!-- 配置数据源,加载配置,也就是dataSource -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
        <!--扫描 XXXmapper.xml映射文件,配置扫描的路径-->
        <property name="mapperLocations" value="classpath:mapper/**/*.xml"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找之中的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="domain.**.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--事务管理-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入dataSource-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--开启事务注解扫描-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

    <!--&lt;!&ndash; 安全管理器 &ndash;&gt;-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
        <!--&lt;!&ndash; 配置 Realm. &ndash;&gt;-->
        <!--<property name="realm" ref="jdbcRealm"/>-->
        <!--&lt;!&ndash; 配置 CacheManager. 缓存&ndash;&gt;-->
        <!--<property name="cacheManager" ref="cacheManager"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;-->
    <!--配置 CacheManager. 缓存-->
    <!--&ndash;&gt;-->
    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
        <!--<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 自定义Realm实现 &ndash;&gt;-->
    <!--<bean id="jdbcRealm" class="domain.shiro.UserAuthorizingRealm">-->
    <!--</bean>-->

    <!--&lt;!&ndash; Shiro 生命周期处理器,，保证实现shiro内部的生命周期函数bean的执行 &ndash;&gt;-->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

    <!--&lt;!&ndash;-->
    <!--启用 IOC 容器中使用 shiro 的注解. 但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用.-->
    <!--&ndash;&gt;-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
          <!--depends-on="lifecycleBeanPostProcessor"/>-->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
        <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; Shiro Filter 拦截器相关配置 &ndash;&gt;-->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
        <!--&lt;!&ndash; securityManager &ndash;&gt;-->
        <!--<property name="securityManager" ref="securityManager"/>-->
        <!--&lt;!&ndash; 重新登录路径 &ndash;&gt;-->
        <!--<property name="loginUrl" value="/security/movetologin"/>-->
        <!--&lt;!&ndash; 用户访问无权限的链接时跳转此页面  &ndash;&gt;-->
        <!--<property name="unauthorizedUrl" value="/unauthorized.jsp"/>-->
        <!--&lt;!&ndash; 验证成功跳转此页面  &ndash;&gt;-->
        <!--<property name="successUrl" value="/security/home"/>-->
        <!--&lt;!&ndash; 过滤链定义 &ndash;&gt;-->
        <!--<property name="filterChainDefinitions">-->
            <!--<value>&lt;!&ndash; 注意拦截顺序，从上往下依次设置&ndash;&gt;-->
                <!--/security/login = anon-->
                <!--/static/** = anon-->
                <!--/shiro/logout = logout-->
                <!--/** = authc-->

            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->

</beans>